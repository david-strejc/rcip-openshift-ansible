---
- name: Install Graphite Dependencies for Redhat
  yum: "name={{ item }} state=present"
  with_items:
    - git
    - gcc
    - mod_wsgi
    - python-pip
    - python-devel
    - python-cffi
    - libffi
    - libffi-devel
    #- pycairo

- name: get requirement.txt for graphite-web
  environment: proxy_env
  get_url:
    url: https://raw.githubusercontent.com/graphite-project/graphite-web/master/requirements.txt
    dest: /tmp/graphite-requirements.txt
    validate_certs: False

- name: install pip packages requirements for graphite-web
  pip: requirements=/tmp/graphite-requirements.txt
  environment:
    http_proxy: "{{ proxy_env['http_proxy'] }}"
    https_proxy: "{{ proxy_env['https_proxy'] }}"
    CFLAGS: '-march=x86-64'
    PYTHONPATH: "/opt/graphite/lib:/opt/graphite/webapp"

- name: install graphite-web
  pip:
    name: "{{ item }}"
    state: present
  environment:
    http_proxy: "{{ proxy_env['http_proxy'] }}"
    https_proxy: "{{ proxy_env['https_proxy'] }}"
    CFLAGS: '-march=x86-64'
    PYTHONPATH: "/opt/graphite/lib:/opt/graphite/webapp"
  with_items:
    - graphite-web
    - carbon

- name: copy carbon.conf & graphite.wsgi & storage-schemas.conf & storage-aggregation.conf
  copy:
    src: "opt/graphite/conf/{{ item }}"
    dest: "/opt/graphite/conf/{{ item }}"
  with_items:
    - carbon.conf
    - graphite.wsgi
    - storage-schemas.conf
    - storage-aggregation.conf

- name: add graphite user
  user: name=graphite

- name: create systemd unit for carbon-cache
  copy:
    src: etc/systemd/system/carbon-cache.service
    dest: /etc/systemd/system/carbon-cache.service
  notify:
    - daemon-reload

- name: Set right permissions for some dir in /opt/graphite
  file:
    path: "/opt/graphite/storage{{ item }}"
    state: directory
    mode: 0775
  with_items:
    - ""
    - "/log"
    - "/log/webapp"
    - "/whisper"
- name: Set right owner:groups recursively for /opt/graphite/storage...
  file:
    path: "/opt/graphite/{{ item.dir }}"
    owner: "{{ item.owner }}"
    group: apache
    state: directory
    recurse: yes
  with_items:
    - { dir: "storage", owner: "graphite" }
    - { dir: "storage/log", owner: "graphite" }
    - { dir: "storage/log/webapp", owner: "apache" }

- name: check if SELinux fcontext is present
  shell: semanage fcontext -l | grep '/opt/graphite/storage/log/webapp(/.*)?' | grep httpd_log_t
  ignore_errors: yes
  changed_when: False
  always_run: yes
  register: context_present

- name: Set SELinux fcontext for apache to be able to use log dir for wsgi
  command: "{{ item }}"
  with_items:
    - semanage fcontext -a -t httpd_log_t "/opt/graphite/storage/log/webapp(/.*)?"
    - restorecon -R -v /opt/graphite/storage/log/webapp
  when: context_present|failed
  ignore_errors: yes

- name: configure graphite-web
  template:
    src: opt/graphite/webapp/graphite/local_settings.py.j2
    dest: /opt/graphite/webapp/graphite/local_settings.py

- name: Start carbon cache
  service: name=carbon-cache state=running enabled=yes


# mysql
- name: check in SELinux if httpd can network connect to db
  shell: semanage boolean -l |grep httpd_can_network_connect_db|egrep '\(on +, +on\)'
  ignore_errors: yes
  changed_when: False
  always_run: yes
  register: connectdb_present

- name: set in SELinux so httpd can network connect to db
  command: setsebool -P httpd_can_network_connect_db 1
  when: connectdb_present|failed

- name: install mysql python
  yum: name=MySQL-python state=installed
  when: mysql_host in ['localhost', '127.0.0.1']

- name: create graphite db
  mysql_db: "name={{ graphite_mysql_db }} state=present"
  when: mysql_host in ['localhost', '127.0.0.1']

- name: create graphite mysql user
  mysql_user:
    name: "{{ graphite_mysql_user }}"
    password: "{{ graphite_mysql_password }}"
    priv: "{{ graphite_mysql_db }}.*:ALL"
    host: "{{ item }}"
    state: present
  with_items:
    - 127.0.0.1
    - localhost
  when: mysql_host in ['localhost', '127.0.0.1']

# TODO: run setup only once
- name: Setup graphite db
  command: /usr/bin/python manage.py migrate --noinput chdir=/opt/graphite/webapp/graphite
